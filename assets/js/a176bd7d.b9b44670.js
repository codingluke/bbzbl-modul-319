"use strict";(self.webpackChunkdocosaurus_rex=self.webpackChunkdocosaurus_rex||[]).push([[7134],{3905:(e,n,t)=>{t.d(n,{Zo:()=>h,kt:()=>b});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),o=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},h=function(e){var n=o(e.components);return r.createElement(u.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),c=o(t),p=i,b=c["".concat(u,".").concat(p)]||c[p]||d[p]||a;return t?r.createElement(b,l(l({ref:n},h),{},{components:t})):r.createElement(b,l({ref:n},h))}));function b(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=p;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s[c]="string"==typeof e?e:i,l[1]=s;for(var o=2;o<a;o++)l[o]=t[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},83206:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>o});var r=t(87462),i=(t(67294),t(3905));const a={sidebar_position:6,keywords:["pdf"]},l="Geltungsbereich von lokalen Variablen",s={unversionedId:"4a-methoden-fehleranalyse/geltungsbereich-variablen",id:"4a-methoden-fehleranalyse/geltungsbereich-variablen",title:"Geltungsbereich von lokalen Variablen",description:"Wenn eine Variable innerhalb einer Methode initialisiert wird, spricht man",source:"@site/docs/4a-methoden-fehleranalyse/geltungsbereich-variablen.md",sourceDirName:"4a-methoden-fehleranalyse",slug:"/4a-methoden-fehleranalyse/geltungsbereich-variablen",permalink:"/bbzbl-modul-319/docs/4a-methoden-fehleranalyse/geltungsbereich-variablen",draft:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-319/tree/main/docs/4a-methoden-fehleranalyse/geltungsbereich-variablen.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,keywords:["pdf"]},sidebar:"tutorialSidebar",previous:{title:"Fehleranalyse und Fehlersuchen",permalink:"/bbzbl-modul-319/docs/4a-methoden-fehleranalyse/fehleranalyse"},next:{title:"5 - Schleifen und Wiederholungen",permalink:"/bbzbl-modul-319/docs/5a-while/"}},u={},o=[{value:"Explizites Beispiel",id:"explizites-beispiel",level:4}],h={toc:o},c="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(c,(0,r.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"geltungsbereich-von-lokalen-variablen"},"Geltungsbereich von lokalen Variablen"),(0,i.kt)("p",null,"Wenn eine Variable ",(0,i.kt)("strong",{parentName:"p"},"innerhalb einer Methode initialisiert")," wird, spricht man\nvon lokalen Variablen. Lokal, da sie nur innerhalb dieser Methode ab der\nInitialisierung verwendet werden kann (g\xfcltig ist)."),(0,i.kt)("p",null,"Zudem k\xf6nnen lokale Variablen ",(0,i.kt)("strong",{parentName:"p"},"nur im selben Code-Block")," (geschweifte Klammern\n",(0,i.kt)("inlineCode",{parentName:"p"},"{ }"),") indem Sie deklariert wurden, verwendet werden."),(0,i.kt)("h4",{id:"explizites-beispiel"},"Explizites Beispiel"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Gr\xfcn wird dargestellt wenn eine Variable sichtbar, also deklariert wird"),(0,i.kt)("li",{parentName:"ul"},"Gelb zeigt an wenn die Sichtbarkeit einer Variable endet"),(0,i.kt)("li",{parentName:"ul"},"Rot sind Fehlerbeispiele, an diesen Stellen wird versucht auf eine Variable\nzuzugreifen, welche an dem Punkt nicht sichtbar ist.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Geltungsbereich von lokalen Variablen" showLineNumbers',title:'"Geltungsbereich',von:!0,lokalen:!0,'Variablen"':!0,showLineNumbers:!0},'import mytools.StdInput;\n\npublic class Beispiel {\n\n    public static void main(String[] args) {\n        // highlight-red-next-line\n        // ERROR: userInputMain wird erst auf Zeile 9 definiert\n        // highlight-red-next-line\n        System.out.println("Hier kann " + userInputMain + " noch nicht verwendet werden!");\n\n        // highlight-green-next-line\n        int userInputMain = readNumberInRange(40, 60); // ab hier ist userInputMain sichtbar\n\n        // userInputMain ist sichtbar\n        System.out.println("Sie haben " + userInputMain + " eingegeben!");\n\n        // highlight-red-next-line\n        // ERROR: userInputRange ist hier nicht sichtbar!\n        // highlight-red-next-line\n        System.out.println("Hier kann " + userInputRange + " nicht verwendet werden!");\n        // highlight-yellow-next-line\n        // hier endet die Sichtbarkeit von userInputMain\n    }\n\n    private static int readNumberInRange(int min, int max)\n        // highlight-green-next-line\n    {   // ab hier ist min und max sichtbar\n        // highlight-green-next-line\n        int userInputRange; // ab hier ist userInputRange sichtbar\n        do {\n            // highlight-green-next-line\n            int userInputRangeNested; // ab hier ist userInputRangeNested sichtbar\n            System.out.print("Geben Sie eine Zahl zwischen " + min + " und " + max + " ein: ");\n            userInputRangeNested = StdInput.readInt(); // userInputRangeNested ist sichtbar\n            userInputRange = userInputRangeNested; // userInputRange ist sichtbar\n            // highlight-yellow-next-line\n            // hier endet die Sichtbarkeit von userInputRangeNested\n        } while (min > userInputRange || userInputRange > max);\n        // highlight-red-next-line\n        return userInputRangeNested; // ERROR: userInputRangeNested ist nicht sichtbar!\n        return userInputRange; // userInputRange ist hier sichtbar\n        // highlight-yellow-next-line\n        // hier endet die Sichtbarkeit von userInputRange, min und max\n    }\n\n}\n')),(0,i.kt)("admonition",{title:"Geschweifte Klammern Z\xe4hlen!",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Beim Programmieren muss man immer ein gutes Auge auf die geschweiften Klammern\nhalten. Diese sind sehr oft das Problem wenn Eclipse errors anzeigt."),(0,i.kt)("p",{parentName:"admonition"},"\ud83e\uddb8 Es ist guter Stil, wenn die Verschachtelung nicht mehr als 3\nKlammern \xfcbersteigt.")))}d.isMDXComponent=!0}}]);