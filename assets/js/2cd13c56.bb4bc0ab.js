"use strict";(self.webpackChunkdocosaurus_rex=self.webpackChunkdocosaurus_rex||[]).push([[9906],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=r.createContext({}),m=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=m(e.components);return r.createElement(d.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=m(t),k=a,h=s["".concat(d,".").concat(k)]||s[k]||u[k]||i;return t?r.createElement(h,l(l({ref:n},p),{},{components:t})):r.createElement(h,l({ref:n},p))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=k;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o[s]="string"==typeof e?e:a,l[1]=o;for(var m=2;m<i;m++)l[m]=t[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},8090:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var r=t(7462),a=(t(7294),t(3905));const i={sidebar_position:3,keywords:["pdf"]},l="Methoden Vertiefung",o={unversionedId:"4a-methoden-fehleranalyse/methoden",id:"4a-methoden-fehleranalyse/methoden",title:"Methoden Vertiefung",description:"Jetzt lernen Sie, wie Sie Methoden erstellen k\xf6nnen, denen Sie bestimmte Werte",source:"@site/docs/4a-methoden-fehleranalyse/methoden.md",sourceDirName:"4a-methoden-fehleranalyse",slug:"/4a-methoden-fehleranalyse/methoden",permalink:"/bbzbl-modul-319/docs/4a-methoden-fehleranalyse/methoden",draft:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-319/tree/main/docs/4a-methoden-fehleranalyse/methoden.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,keywords:["pdf"]},sidebar:"tutorialSidebar",previous:{title:"Debugging / Fehleranalyse",permalink:"/bbzbl-modul-319/docs/4a-methoden-fehleranalyse/debugging"},next:{title:"\ud83d\udcdd Methoden Aufgaben",permalink:"/bbzbl-modul-319/docs/4a-methoden-fehleranalyse/aufgaben"}},d={},m=[{value:"Anatomie einer Methode",id:"anatomie-einer-methode",level:2},{value:"\ud83e\uddec Signatur / Kopf <code>public ...</code>",id:"-signatur--kopf-public-",level:3},{value:"\ud83e\uddbe Methodenk\xf6rper <code>{ ... }</code>",id:"-methodenk\xf6rper---",level:3},{value:"Beispiel Methode mit Parameter und R\xfcckgabewert",id:"beispiel-methode-mit-parameter-und-r\xfcckgabewert",level:3},{value:"Ablauf des Beispiels",id:"ablauf-des-beispiels",level:4},{value:"\ud83d\udcfa Erkl\xe4rvideos von Studyflix",id:"-erkl\xe4rvideos-von-studyflix",level:2}],p={toc:m},s="wrapper";function u(e){let{components:n,...i}=e;return(0,a.kt)(s,(0,r.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"methoden-vertiefung"},"Methoden Vertiefung"),(0,a.kt)("p",null,"Jetzt lernen Sie, wie Sie Methoden erstellen k\xf6nnen, ",(0,a.kt)("strong",{parentName:"p"},"denen Sie bestimmte Werte\n\xfcbermitteln")," und die ein berechnetes ",(0,a.kt)("strong",{parentName:"p"},"Ergebnis zur\xfcckgeben")," k\xf6nnen.\nZus\xe4tzlich werden verschiedene Ans\xe4tze betrachtet, wie man sonst noch mit\nFehlern umgehen kann."),(0,a.kt)("h2",{id:"anatomie-einer-methode"},"Anatomie einer Methode"),(0,a.kt)("h3",{id:"-signatur--kopf-public-"},"\ud83e\uddec Signatur / Kopf ",(0,a.kt)("inlineCode",{parentName:"h3"},"public ...")),(0,a.kt)("p",null,"Die unten hervorgehobene Zeile einer Methode, in der die Sichtbarkeit, Name,\nParameter und der Datentyp des R\xfcckgabewertes deklariert werden, heisst ",(0,a.kt)("strong",{parentName:"p"},"Kopf"),"\n(oder auch ",(0,a.kt)("strong",{parentName:"p"},"Signatur"),") der Methode. In der Signatur wird definiert ",(0,a.kt)("strong",{parentName:"p"},"wie")," die\nMethode aufgerufen werden muss. Nicht aber, was sie genau macht."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Signatur einer Methode"',title:'"Signatur',einer:!0,'Methode"':!0},"// highlight-yellow-next-line\npublic static String methodenName(int parameter1, String parameter2) {\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Schl\xfcsselwort"),(0,a.kt)("th",{parentName:"tr",align:null},"Beschreibung"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"public")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Sichtbarkeit"),": momentan immer ",(0,a.kt)("inlineCode",{parentName:"td"},"public"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"static")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Art"),": momentan immer ",(0,a.kt)("inlineCode",{parentName:"td"},"static"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"String")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Datentyp vom R\xfcckgabewert"),": ",(0,a.kt)("inlineCode",{parentName:"td"},"void")," oder beliebiger Datentyp ",(0,a.kt)("br",null),"- ",(0,a.kt)("inlineCode",{parentName:"td"},"void")," besitzt keinen R\xfcckgabewert und braucht kein ",(0,a.kt)("inlineCode",{parentName:"td"},"return")," ",(0,a.kt)("br",null),"- Wenn ein R\xfcckgabewert angegeben wird (z.B. ",(0,a.kt)("inlineCode",{parentName:"td"},"String"),"), ist ein ",(0,a.kt)("inlineCode",{parentName:"td"},"return")," im Methodenk\xf6rper Pflicht!")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"methodenName")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Methodenname"),": frei w\xe4hlbar, sollte in ",(0,a.kt)("strong",{parentName:"td"},"lowerCamelCase")," geschrieben sein")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"(int parameter1, String parameter2)")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Parameterliste"),": Kommaseparierte Parameterliste in Klammern.",(0,a.kt)("br",null),"- Jeder Parameter besteht aus: ",(0,a.kt)("inlineCode",{parentName:"td"},"Datentyp Variabelnamen"),(0,a.kt)("br",null),"- Jeder Parameter ist im Methodenk\xf6rper als Variable verwendbar ",(0,a.kt)("br",null),"- Darf leer sein ",(0,a.kt)("inlineCode",{parentName:"td"},"()"))))),(0,a.kt)("h3",{id:"-methodenk\xf6rper---"},"\ud83e\uddbe Methodenk\xf6rper ",(0,a.kt)("inlineCode",{parentName:"h3"},"{ ... }")),(0,a.kt)("p",null,"Nach dem Kopf/Signatur folgt ",(0,a.kt)("strong",{parentName:"p"},"zwischen geschweiften Klammern ",(0,a.kt)("inlineCode",{parentName:"strong"},"{}"))," der K\xf6rper\nder Methode. Hier wird nun definiert, ",(0,a.kt)("strong",{parentName:"p"},"was")," gemacht werden soll, wenn die\nMethode aufgerufen wird."),(0,a.kt)("p",null,"\ud83d\udca1 Im Methodenk\xf6rper befindet sich somit ",(0,a.kt)("strong",{parentName:"p"},"der ausf\xfchrbare Code")," in Java"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Methodenk\xf6rper, ausf\xfchrbarer Code" showLineNumbers',title:'"Methodenk\xf6rper,',"ausf\xfchrbarer":!0,'Code"':!0,showLineNumbers:!0},'public static String methodenName(int parameter1, String parameter2) {\n    // highlight-yellow-start\n    int lokaleVariable = parameter1 + 2;\n    return lokaleVariable + " " + parameter2;\n    // highlight-yellow-end\n}\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"R\xfcckgabe: ",(0,a.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"return")),(0,a.kt)("p",{parentName:"admonition"},"Besitzt die Signatur einer Methode einen Datentyp (also z.B. ",(0,a.kt)("inlineCode",{parentName:"p"},"String")," wie oben,\nnicht aber ",(0,a.kt)("inlineCode",{parentName:"p"},"void"),"), muss die letzte Anweisung (Zeile) einer Methode ",(0,a.kt)("inlineCode",{parentName:"p"},"return"),"\nsein! (wie in ",(0,a.kt)("strong",{parentName:"p"},"Zeile 3"),").")),(0,a.kt)("h3",{id:"beispiel-methode-mit-parameter-und-r\xfcckgabewert"},"Beispiel Methode mit Parameter und R\xfcckgabewert"),(0,a.kt)("p",null,"Nun wollen wir an einem expliziten Beispiel eine Methode analysieren welche \xfcber\nParameter und R\xfcckgabewert verf\xfcgt."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Wir erstellen eine Methode mit dem Namen ",(0,a.kt)("inlineCode",{parentName:"li"},"readNumberInRange(int min, int max)"),"\nwelche vom Benutzer eine Nummer erwartet."),(0,a.kt)("li",{parentName:"ul"},"Die Nummer muss sich in einem gew\xe4hlten Bereich befinden."),(0,a.kt)("li",{parentName:"ul"},"Wenn eine Nummer eingegeben wird, welche nicht im Bereich ist, soll nochmals\nnachgefragt werden."),(0,a.kt)("li",{parentName:"ul"},"Die korrekt eingegebene Nummer soll in der Konsole ausgegeben werden.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Explizites Beispiel" showLineNumbers',title:'"Explizites','Beispiel"':!0,showLineNumbers:!0},'import mytools.StdInput;\n\npublic class Beispiel {\n\n    public static void main(String[] args) {\n        // highlight-yellow-next-line\n        int userInput = readNumberInRange(40, 60); // Verwendung\n        System.out.println("Sie haben " + userInput + " eingegeben!");\n    }\n\n    // highlight-blue-next-line\n    private static int readNumberInRange(int min, int max) // Kopf / Signatur\n    {\n        // highlight-green-start\n        // Methodenk\xf6rper / Methoden-Body\n        int userInput;\n        do {\n            System.out.print("Geben Sie eine Zahl zwischen " + min + " und " + max + " ein: ");\n            userInput = StdInput.readInt();\n        } while (min > userInput || userInput > max);\n        return userInput;\n        // highlight-green-end\n    }\n\n}\n')),(0,a.kt)("div",{class:"grid three"},(0,a.kt)("div",null,(0,a.kt)("span",{class:"code-block-yellow-line"},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\ud83e\uddd1\u200d\ud83d\udd27 Methoden Verwendung")," ",(0,a.kt)("br",null)," gelb, Linie 6")),(0,a.kt)("p",null,"Die Verwendung befindet sich ",(0,a.kt)("strong",{parentName:"p"},"immer in einem Methoden-Body"),". Dies ist\nausf\xfchrbarer Code.")),(0,a.kt)("div",null,(0,a.kt)("span",{class:"code-block-blue-line"},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\ud83e\uddec Methoden Kopf / Signatur")," ",(0,a.kt)("br",null)," blau auf Zeile 10")),(0,a.kt)("p",null,"Es wird definiert ",(0,a.kt)("strong",{parentName:"p"},"wie")," eine Methode genau aufgerufen werden muss. Der\nMethoden-Kopf ist nicht ausf\xfchrbarer Code, sondern geh\xf6rt zur Struktur.")),(0,a.kt)("div",null,(0,a.kt)("span",{class:"code-block-green-line"},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\ud83e\uddbe Methodenk\xf6rper")," ",(0,a.kt)("br",null)," gr\xfcn, Zeilen 12 - 18")),(0,a.kt)("p",null,"Es wird definiert ",(0,a.kt)("strong",{parentName:"p"},"was")," genau geschehen soll, wenn die Methode aufgerufen\nwird. Im Methoden-Body befindet sich der ausf\xfchrbare Code."))),(0,a.kt)("h4",{id:"ablauf-des-beispiels"},"Ablauf des Beispiels"),(0,a.kt)("p",null,"Hier wird nochmals das selbe Programm dargestellt. Es wird nun aufgezeigt wie\ndas Program genau durchlaufen wird. In allen Programmiersprachen wird ein\nProgramm immer von ",(0,a.kt)("strong",{parentName:"p"},"Rechts nach Links, nach Unten")," \ud83d\udc48 durchlaufen."),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(7545).Z,width:"945",height:"483"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Das Programm startet im K\xf6rper der Methode ",(0,a.kt)("inlineCode",{parentName:"strong"},"main")," auf Zeile 6"),":"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Da es von Rechts nach Links abl\xe4uft wird zuerst die Methode\n",(0,a.kt)("inlineCode",{parentName:"li"},"readNumberInRange(40, 60)")," auf ",(0,a.kt)("strong",{parentName:"li"},"Zeile 6")," ausgef\xfchrt. Die Methode\n",(0,a.kt)("inlineCode",{parentName:"li"},"readNumberInRange")," wird mit den ",(0,a.kt)("strong",{parentName:"li"},"Parameter min=40 und max=60")," ausgef\xfchrt."),(0,a.kt)("li",{parentName:"ol"},"Nun Springt das Programm in den K\xf6rper der Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"readNumberInRange"),".",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Zuerst wird auf ",(0,a.kt)("strong",{parentName:"li"},"Zeile 13")," die lokale Variable ",(0,a.kt)("inlineCode",{parentName:"li"},"int userInput;"),"\ndeklariert. Sie wird nicht initialisiert, da der Wert direkt vom Benutzer\neingelesen wird."),(0,a.kt)("li",{parentName:"ul"},"dann wird in der ",(0,a.kt)("inlineCode",{parentName:"li"},"do..while")," Schlaufe mit Hilfe von\n",(0,a.kt)("inlineCode",{parentName:"li"},"mytools.StdInput.readInt()")," auf ",(0,a.kt)("strong",{parentName:"li"},"Zeile 16")," ein Integer eingelesen und in\nder Variable ",(0,a.kt)("inlineCode",{parentName:"li"},"userInput")," gespeichert."),(0,a.kt)("li",{parentName:"ul"},"Auf ",(0,a.kt)("strong",{parentName:"li"},"Zeile 17")," wird gepr\xfcft ob ",(0,a.kt)("inlineCode",{parentName:"li"},"userInput")," zwischen ",(0,a.kt)("inlineCode",{parentName:"li"},"min")," und ",(0,a.kt)("inlineCode",{parentName:"li"},"max"),"\nliegt. Hier also zwischen 40 und 60."),(0,a.kt)("li",{parentName:"ul"},"Wurde keine korrekte Zahl eingelesen Springt das Programm wieder zur\n",(0,a.kt)("strong",{parentName:"li"},"Zeile 15")))),(0,a.kt)("li",{parentName:"ol"},"Wurde eine korrekte Zahl eingelesen, wird sie nun auf ",(0,a.kt)("strong",{parentName:"li"},"Zeile 18"),"\nzur\xfcckgegeben."),(0,a.kt)("li",{parentName:"ol"},"Nun springt das Programm wieder zur\xfcck zur ",(0,a.kt)("strong",{parentName:"li"},"Zeile 6"),". Der zur\xfcckgegebene\nWert wird nun durch den Zuweisungsoperator ",(0,a.kt)("inlineCode",{parentName:"li"},"=")," in die lokale Variable\n",(0,a.kt)("inlineCode",{parentName:"li"},"int userInput")," der ",(0,a.kt)("inlineCode",{parentName:"li"},"main"),"-Methode gespeichert."),(0,a.kt)("li",{parentName:"ol"},"Als weiteres wird nun die Variable ",(0,a.kt)("inlineCode",{parentName:"li"},"userInput")," auf ",(0,a.kt)("strong",{parentName:"li"},"Zeile 7")," mit einem\nString verkn\xfcpft und durch die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"System.out.println")," auf die Konsole\nausgegeben. Es wird bei einem Methodenaufruf also immer zuerst der Code\ninnerhalb der Klammer ",(0,a.kt)("inlineCode",{parentName:"li"},"()")," ausgef\xfchrt.")),(0,a.kt)("admonition",{title:"Zeilen-Flow",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"6, 13, (14, 15, 16, 17), 18, 6, 7"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Wobei die Zeilen (14, 15, 16, 17) mehrmals ausgef\xfchrt werden k\xf6nnen."),(0,a.kt)("li",{parentName:"ul"},"Die Zeilen 1-5, 8-11, 19-21 werden nie ausgef\xfchrt. Sie beinhalten Struktur\nInformationen, nicht aber ausf\xfchrbarer Code."))),(0,a.kt)("admonition",{title:"Sortierung von Methoden in Klassen ist egal!",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Die ",(0,a.kt)("inlineCode",{parentName:"p"},"main"),"-Methode ist im Beispiel vor der ",(0,a.kt)("inlineCode",{parentName:"p"},"readNumberInRange")," Methode definiert\nworden. Die Reihenfolge spielt keine Rolle. Diese k\xf6nnte auch am Ende definiert\nwerden."),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Die Reihenfolge ist daher egal, da es sich hier um Struktur und nicht\nausf\xfchrbarem Code handelt."),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udd25 ",(0,a.kt)("strong",{parentName:"li"},"Achtung!")," die Reihenfolge vom ausf\xfchrbarem Code im Methodenk\xf6rper\nspielt nat\xfcrlich eine Rolle!"))),(0,a.kt)("h2",{id:"-erkl\xe4rvideos-von-studyflix"},"\ud83d\udcfa Erkl\xe4rvideos von Studyflix"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://studyflix.de/informatik/java-methoden-1901"},"Java Methoden einfach erkl\xe4rt")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://studyflix.de/informatik/parameter-von-methoden-426"},"Parameter von Methoden einfach erkl\xe4rt"))))}u.isMDXComponent=!0},7545:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/methodenflow-14609264826c9fdcd6e0398a9f35192e.png"}}]);