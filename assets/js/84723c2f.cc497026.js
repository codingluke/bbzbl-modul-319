"use strict";(self.webpackChunkdocosaurus_rex=self.webpackChunkdocosaurus_rex||[]).push([[424],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>b});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(t),c=r,b=m["".concat(s,".").concat(c)]||m[c]||d[c]||i;return t?a.createElement(b,l(l({ref:n},u),{},{components:t})):a.createElement(b,l({ref:n},u))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=c;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},44215:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const i={keywords:["pdf"]},l="\ud83d\udcdd Datentypen initialisieren",o={unversionedId:"2b-datentypen/aufgabe2-datentypen-initialisieren",id:"2b-datentypen/aufgabe2-datentypen-initialisieren",title:"\ud83d\udcdd Datentypen initialisieren",description:"Erstellen Sie ein Programm, in welchem Sie:",source:"@site/docs/2b-datentypen/aufgabe2-datentypen-initialisieren.md",sourceDirName:"2b-datentypen",slug:"/2b-datentypen/aufgabe2-datentypen-initialisieren",permalink:"/bbzbl-modul-319/docs/2b-datentypen/aufgabe2-datentypen-initialisieren",draft:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-319/tree/main/docs/2b-datentypen/aufgabe2-datentypen-initialisieren.md",tags:[],version:"current",frontMatter:{keywords:["pdf"]},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcdd Datetypen bestimmen",permalink:"/bbzbl-modul-319/docs/2b-datentypen/aufgabe1-datentypen-bestimmen"},next:{title:"\ud83d\udcdd Noten berechnen",permalink:"/bbzbl-modul-319/docs/2b-datentypen/aufgabe3-notenberechnen"}},s={},p=[{value:"\ud83e\uddb8 Bonusauftrag einlesen",id:"-bonusauftrag-einlesen",level:2}],u={toc:p},m="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-datentypen-initialisieren"},"\ud83d\udcdd Datentypen initialisieren"),(0,r.kt)("p",null,"Erstellen Sie ein Programm, in welchem Sie:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"f\xfcr jeden Datentypen eine Variable ",(0,r.kt)("strong",{parentName:"li"},"deklarieren")),(0,r.kt)("li",{parentName:"ul"},"einen passenden Wert fest ",(0,r.kt)("strong",{parentName:"li"},"zuweisen")),(0,r.kt)("li",{parentName:"ul"},"und anschliessend die Variablen ",(0,r.kt)("strong",{parentName:"li"},"ausgeben"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Versucht evt. Datentypen zu verbinden!")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Musterl\xf6sung"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Wo ist die Methode ",(0,r.kt)("inlineCode",{parentName:"strong"},"main"),"?")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Die Klasse mit der ",(0,r.kt)("inlineCode",{parentName:"li"},"main")," Methode m\xfcsst Ihr selber erstellen."),(0,r.kt)("li",{parentName:"ul"},"der ",(0,r.kt)("inlineCode",{parentName:"li"},"import")," geh\xf6rt ganz oben ins File."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"...")," kann man l\xf6schen ;)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// deklarieren\nboolean aBoolean;\nbyte aByte;\nshort aShort;\nchar aChar;\nint aInt;\nfloat aFloat;\nlong aLong;\ndouble aDouble;\nString aString;\n\n// initialisieren\naBoolean = true;\naByte = 127;\naShort = 32767;\naChar = 'a';\naInt = 2147483647;\naFloat = 12.1234567f;\naLong = 9223372036854775807l;\naDouble = 12.123456789123456d;\naString = \"Hallo ich bin ein Text\";\n\n// ausgeben\nSystem.out.println(aBoolean);\nSystem.out.println(aByte + aShort + aInt + aLong);\nSystem.out.println(aFloat + aDouble);\nSystem.out.println(aString + aBoolean);`\n"))),(0,r.kt)("h2",{id:"-bonusauftrag-einlesen"},"\ud83e\uddb8 Bonusauftrag einlesen"),(0,r.kt)("p",null,"Sobald Sie den ",(0,r.kt)("strong",{parentName:"p"},"obigen Auftrag abgeschlossen")," haben, k\xf6nnen Sie sich nach\nVorgabe Ihrer Lehrperson (und sofern gen\xfcgend Zeit verf\xfcgbar ist) eine Variante\ndes Programms erstellen, bei der Sie die Werte mit dem ",(0,r.kt)("inlineCode",{parentName:"p"},"StdInput")," von ",(0,r.kt)("inlineCode",{parentName:"p"},"mytools"),"\neinlesen."),(0,r.kt)("admonition",{title:"nicht alle Datentypen m\xf6glich",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Die Klasse ",(0,r.kt)("inlineCode",{parentName:"p"},"StdInput")," besitzt ",(0,r.kt)("u",null,"keine Methoden")," f\xfcr die Datentypen ",(0,r.kt)("inlineCode",{parentName:"p"},"byte"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"short"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"long")," und ",(0,r.kt)("inlineCode",{parentName:"p"},"float"),". Diese m\xfcssen (k\xf6nnen) also nicht eingelesen werden.")),(0,r.kt)("admonition",{title:"Scanner",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Java besitzt die Klasse ",(0,r.kt)("inlineCode",{parentName:"p"},"Scanner"),". Mit dieser k\xf6nnen alle Datentypen eingelesen\nwerden. Dies ist jedoch nicht statisch, braucht also ein Objekt, desswegen wird\nsie im Unterricht noch nicht vorausgesetzt. Interessiere, d\xfcrfen diese gerne\ntesten!")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Musterl\xf6sung"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Wo ist die Methode ",(0,r.kt)("inlineCode",{parentName:"strong"},"main"),"?")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Die Klasse mit der ",(0,r.kt)("inlineCode",{parentName:"li"},"main")," Methode m\xfcsst Ihr selber erstellen."),(0,r.kt)("li",{parentName:"ul"},"der ",(0,r.kt)("inlineCode",{parentName:"li"},"import")," geh\xf6rt ganz oben ins File."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"...")," kann man l\xf6schen ;)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'import mytools.StdInput;\n\n...\n\nint number;\ndouble largeDecimalNumber;\nchar single;\nboolean customer;\nString comment;\n\nSystem.out.println("Please enter a int value: ");\nnumber = StdInput.readInt();\nSystem.out.println("Please enter a double value: ");\nlargeDecimalNumber = StdInput.readDouble();\nSystem.out.println("Please enter a char value: ");\nsingle = StdInput.readChar();\nSystem.out.println("Please enter a boolean value: ");\ncustomer = StdInput.readBoolean();\nSystem.out.println("Please enter a String value: ");\ncomment = StdInput.readString();\n\nSystem.out.println(number);\nSystem.out.println(largeDecimalNumber);\nSystem.out.println(single);\nSystem.out.println(customer);\nSystem.out.println(comment);\n'))))}d.isMDXComponent=!0}}]);