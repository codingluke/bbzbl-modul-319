"use strict";(self.webpackChunkdocosaurus_rex=self.webpackChunkdocosaurus_rex||[]).push([[7382],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),o=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=o(e.components);return i.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),p=o(t),h=r,g=p["".concat(s,".").concat(h)]||p[h]||m[h]||a;return t?i.createElement(g,l(l({ref:n},u),{},{components:t})):i.createElement(g,l({ref:n},u))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=p;var d={};for(var s in n)hasOwnProperty.call(n,s)&&(d[s]=n[s]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var o=2;o<a;o++)l[o]=t[o];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},61108:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>d,toc:()=>o});var i=t(87462),r=(t(67294),t(3905));const a={sidebar_position:3},l="Methoden Vertiefung",d={unversionedId:"5a-methoden-fehleranalyse/methoden",id:"5a-methoden-fehleranalyse/methoden",title:"Methoden Vertiefung",description:"Jetzt lernen Sie, wie Sie Methoden erstellen k\xf6nnen, denen Sie bestimmte Werte",source:"@site/docs/5a-methoden-fehleranalyse/methoden.md",sourceDirName:"5a-methoden-fehleranalyse",slug:"/5a-methoden-fehleranalyse/methoden",permalink:"/bbzbl-modul-319/docs/5a-methoden-fehleranalyse/methoden",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Debugging / Fehleranalyse",permalink:"/bbzbl-modul-319/docs/5a-methoden-fehleranalyse/debugging"},next:{title:"Fehleranalyse und Fehlersuchen",permalink:"/bbzbl-modul-319/docs/5a-methoden-fehleranalyse/fehleranalyse"}},s={},o=[{value:"Anatomie einer Methode",id:"anatomie-einer-methode",level:2},{value:"\ud83e\uddec Signatur / Kopf <code>public ...</code>",id:"-signatur--kopf-public-",level:3},{value:"\ud83d\udd28 Methodenk\xf6rper <code>{ ... }</code>",id:"-methodenk\xf6rper---",level:3},{value:"Beispiel Methode mit Parameter und R\xfcckgabewert",id:"beispiel-methode-mit-parameter-und-r\xfcckgabewert",level:3},{value:"Ablauf eines Programms &quot;Flow&quot;",id:"ablauf-eines-programms-flow",level:3},{value:"Geltungsbereich von lokalen Variablen",id:"geltungsbereich-von-lokalen-variablen",level:3},{value:"Explizites Beispiel",id:"explizites-beispiel",level:4},{value:"\ud83d\udcfa Erkl\xe4rvideos von Studyflix",id:"-erkl\xe4rvideos-von-studyflix",level:2}],u={toc:o};function m(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,i.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"methoden-vertiefung"},"Methoden Vertiefung"),(0,r.kt)("p",null,"Jetzt lernen Sie, wie Sie Methoden erstellen k\xf6nnen, ",(0,r.kt)("strong",{parentName:"p"},"denen Sie bestimmte Werte\n\xfcbermitteln")," und die ein berechnetes ",(0,r.kt)("strong",{parentName:"p"},"Ergebnis zur\xfcckgeben")," k\xf6nnen.\nZus\xe4tzlich werden verschiedene Ans\xe4tze betrachtet, wie man sonst noch mit\nFehlern umgehen kann."),(0,r.kt)("h2",{id:"anatomie-einer-methode"},"Anatomie einer Methode"),(0,r.kt)("h3",{id:"-signatur--kopf-public-"},"\ud83e\uddec Signatur / Kopf ",(0,r.kt)("inlineCode",{parentName:"h3"},"public ...")),(0,r.kt)("p",null,"Die unten hervorgehobene Zeile einer Methode, in der die Sichtbarkeit, Name,\nParameter und der Datentyp des R\xfcckgabewertes deklariert werden, heisst ",(0,r.kt)("strong",{parentName:"p"},"Kopf"),"\n(oder auch ",(0,r.kt)("strong",{parentName:"p"},"Signatur"),") der Methode. In der Signatur wird definiert ",(0,r.kt)("strong",{parentName:"p"},"wie")," die\nMethode aufgerufen werden muss. Nicht aber, was sie genau macht."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Signatur einer Methode"',title:'"Signatur',einer:!0,'Methode"':!0},"// highlight-next-line\npublic static int methodenName(int parameter1, String parameter2) {\n    // Methodenk\xf6rper\n    return 0;\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Sichtbarkeit"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"public"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"private"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"protected")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Art"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"static")," oder dynamisch, wenn die Art fehlt"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"R\xfcckgabewert"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"void"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"int"),", beliebiger Datentyp",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"void")," besitzt keinen R\xfcckgabewert und braucht kein ",(0,r.kt)("inlineCode",{parentName:"li"},"return")),(0,r.kt)("li",{parentName:"ul"},"Wenn ein R\xfcckgabewert angegeben wird, ist ",(0,r.kt)("inlineCode",{parentName:"li"},"return")," am Ende Pflicht!"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"methodenName"),": beliebig, sollte in camelCase geschrieben sein"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Kommaseparierte Parameterliste in Klammern"),":\n",(0,r.kt)("inlineCode",{parentName:"li"},"(Datentyp parameter1, Datentyp2 parameter2)"))),(0,r.kt)("h3",{id:"-methodenk\xf6rper---"},"\ud83d\udd28 Methodenk\xf6rper ",(0,r.kt)("inlineCode",{parentName:"h3"},"{ ... }")),(0,r.kt)("p",null,"Nach dem Kopf/Signatur folgt ",(0,r.kt)("strong",{parentName:"p"},"zwischen geschweiften Klammern ",(0,r.kt)("inlineCode",{parentName:"strong"},"{}"))," der K\xf6rper\nder Methode. Hier wird nun definiert, ",(0,r.kt)("strong",{parentName:"p"},"was")," gemacht werden soll, wenn die\nMethode aufgerufen wird."),(0,r.kt)("p",null,"\ud83d\udca1 Im Methodenk\xf6rper befindet sich somit ",(0,r.kt)("strong",{parentName:"p"},"der ausf\xfchrbare Code")," in Java"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Methodenk\xf6rper, ausf\xfchrbarer Code"',title:'"Methodenk\xf6rper,',"ausf\xfchrbarer":!0,'Code"':!0},'public static int methodenName(int parameter1, String parameter2) {\n    // highlight-yellow-start\n    int lokaleVariable = parameter1 + 2;\n    return lokaleVariable + " " + parameter2;\n    // highlight-yellow-end\n}\n')),(0,r.kt)("h3",{id:"beispiel-methode-mit-parameter-und-r\xfcckgabewert"},"Beispiel Methode mit Parameter und R\xfcckgabewert"),(0,r.kt)("p",null,"Nun wollen wir an einem expliziten Beispiel eine Methode analysieren welche \xfcber\nParameter und R\xfcckgabewert verf\xfcgt."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Wir erstellen eine Methode mit dem Namen ",(0,r.kt)("inlineCode",{parentName:"li"},"readNumberInRange(int min, int max)"),"\nwelche vom Benutzer eine Nummer erwartet."),(0,r.kt)("li",{parentName:"ul"},"Die Nummer muss sich in einem gew\xe4hlten Bereich befinden."),(0,r.kt)("li",{parentName:"ul"},"Wenn eine Nummer eingegeben wird, welche nicht im Bereich ist, soll nochmals\nnachgefragt werden."),(0,r.kt)("li",{parentName:"ul"},"Die korrekt eingegebene Nummer soll in der Konsole ausgegeben werden.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Explizites Beispiel" showLineNumbers',title:'"Explizites','Beispiel"':!0,showLineNumbers:!0},'import mytools.StdInput;\n\npublic class Beispiel {\n\n    public static void main(String[] args) {\n        // highlight-yellow-next-line\n        int userInput = readNumberInRange(40, 60); // Verwendung\n        System.out.println("Sie haben " + userInput + " eingegeben!");\n    }\n\n    // highlight-blue-next-line\n    private static int readNumberInRange(int min, int max) // Kopf / Signatur\n    {\n        // highlight-green-start\n        // Methodenk\xf6rper / Methoden-Body\n        int userInput;\n        do {\n            System.out.print("Geben Sie eine Zahl zwischen " + min + " und " + max + " ein: ");\n            userInput = StdInput.readInt();\n        } while (min > userInput || userInput > max);\n        return userInput;\n        // highlight-green-end\n    }\n\n}\n')),(0,r.kt)("span",{class:"code-block-yellow-line"},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\ud83e\uddd1\u200d\ud83d\udd27 Methoden Verwendung")," - gelb, Linie 6")),(0,r.kt)("p",null,"Die Verwendung befindet sich ",(0,r.kt)("strong",{parentName:"p"},"immer in einem Methoden-Body"),". Dies ist\nausf\xfchrbarer Code."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In der ",(0,r.kt)("inlineCode",{parentName:"li"},"main"),"-Methode auf Linie 6 wird die Methode\n",(0,r.kt)("inlineCode",{parentName:"li"},"readNumberInRange(40, 60);")," verwendet/aufgerufen."),(0,r.kt)("li",{parentName:"ul"},"Es wird explizit nach einer Nummer im Bereich zwischen 40 und 60 verlangt."),(0,r.kt)("li",{parentName:"ul"},"die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"readNumberInRange")," selbst wird auf Zeile 10 definiert.")),(0,r.kt)("span",{class:"code-block-blue-line"},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\ud83e\uddec Methoden Kopf / Signatur")," - blau auf Zeile 10")),(0,r.kt)("p",null,"Es wird definiert ",(0,r.kt)("strong",{parentName:"p"},"wie")," eine Methode genau aufgerufen werden muss. Der\nMethoden-Kopf ist nicht ausf\xfchrbarer Code, sondern geh\xf6rt zur Struktur. Im\nBeispiel werden folgende Merkmale spezifiziert:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Sichtbarkeit"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"private")," ",(0,r.kt)("br",null)," Da sie ausschliesslich in der Klasse\nBeispiel verwendet wird, in welcher sie auch implementiert ist, muss sie nicht\n",(0,r.kt)("inlineCode",{parentName:"li"},"public")," sein."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Art"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"static")," ",(0,r.kt)("br",null)," Da die Methode direkt in der statischen Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"main"),"\naufgerufen wird, muss diese Methode ebenfalls statisch sein."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"R\xfcckgabewert"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"int")," ",(0,r.kt)("br",null)," Da wir einen Integer ",(0,r.kt)("inlineCode",{parentName:"li"},"int")," einlesen wollen, muss\ndie Methode auch einen ",(0,r.kt)("inlineCode",{parentName:"li"},"int")," zur\xfcck geben."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"methodenName"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"readNumberInRange")," ",(0,r.kt)("br",null),' Der Name "readNumberInRange" f\xe4ngt\nklein an und ist sprechend. Er besagt dass eine Nummer in einem bestimmten\nBereich eingelesen werden soll.'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Kommaseparierte Parameterliste in Klammern"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"(int min, int max)")," ",(0,r.kt)("br",null)," Mit\nden Parametern ",(0,r.kt)("inlineCode",{parentName:"li"},"int min")," und ",(0,r.kt)("inlineCode",{parentName:"li"},"int max")," wird der Bereich mitgegeben, in dem\nsich die einzulesende Nummer befinden muss.")),(0,r.kt)("span",{class:"code-block-green-line"},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\ud83e\uddbe Methodenk\xf6rper")," - gr\xfcn, Zeilen 12 - 18")),(0,r.kt)("p",null,"Es wird definiert ",(0,r.kt)("strong",{parentName:"p"},"was")," genau geschehen soll, wenn die Methode aufgerufen\nwird. Im Methoden-Body befindet sich der ausf\xfchrbare Code."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Linie 13"),": Hier wir die lokale Variable ",(0,r.kt)("inlineCode",{parentName:"li"},"int userInput")," initialisiert. In\ndiese solle der eingelesene Wert gespeichert werden."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Linie 14 - 17"),": in der ",(0,r.kt)("inlineCode",{parentName:"li"},"do..while")," Schleife, wird die Einleselogik\ndefiniert. Es wird so lange nachgefragt, bis eine korrekte Eingabe gemacht\nwurde. Die Schlaufe wird ",(0,r.kt)("strong",{parentName:"li"},"mindestens ein Mal")," ausgef\xfchrt."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Linie 15"),": Hier wird dem Benutzer mitgeteilt, dass er eine Zahl eingeben\nmuss. Dabei wird ",(0,r.kt)("inlineCode",{parentName:"li"},"min")," und ",(0,r.kt)("inlineCode",{parentName:"li"},"max")," durch die Parameter dynamisch bestimmt."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Linie 16"),": Hier wird mit Hilfe der Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"mytools.StdInput.readInt")," ein\nInteger von der Konsole eingelesen und in die Variable ",(0,r.kt)("inlineCode",{parentName:"li"},"userInput"),"\ngeschrieben."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Linie 17"),": Am Ende der ",(0,r.kt)("inlineCode",{parentName:"li"},"do..while")," Schlaufe wird die Bedingung definiert,\nbei welcher die sie nochmals ausgef\xfchrt werden soll. Die Bedingung\n",(0,r.kt)("inlineCode",{parentName:"li"},"min > userInput || userInput > max")," besagt, wenn der userInput kleiner als\nmin ODER gr\xf6sser als max ist, die Schlaufe nochmals ausgef\xfchrt werden soll."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Linie 18"),": durch ",(0,r.kt)("inlineCode",{parentName:"li"},"return")," wird der ",(0,r.kt)("inlineCode",{parentName:"li"},"userInput")," von der Methode zur\xfcck\ngegeben.")),(0,r.kt)("admonition",{title:"Sortierung von Methoden in Klassen ist egal!",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Die ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),"-Methode ist im Beispiel vor der ",(0,r.kt)("inlineCode",{parentName:"p"},"readNumberInRange")," Methode definiert\nworden. Die Reihenfolge spielt keine Rolle. Diese k\xf6nnte auch am Ende definiert\nwerden."),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Die Reihenfolge ist daher egal, da es sich hier um Struktur und nicht\nausf\xfchrbarem Code handelt."),(0,r.kt)("li",{parentName:"ul"},"\ud83d\udd25 ",(0,r.kt)("strong",{parentName:"li"},"Achtung!")," die Reihenfolge vom ausf\xfchrbarem Code im Methodenk\xf6rper\nspielt nat\xfcrlich eine Rolle!"))),(0,r.kt)("h3",{id:"ablauf-eines-programms-flow"},'Ablauf eines Programms "Flow"'),(0,r.kt)("p",null,"Hier wird nochmals das selbe Programm dargestellt. Es wird nun aufgezeigt wie\ndas Program genau durchlaufen wird. In allen Programmiersprachen wird ein\nProgramm immer von ",(0,r.kt)("strong",{parentName:"p"},"Rechts nach Links, nach Unten")," \ud83d\udc48 durchlaufen."),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(87545).Z,width:"945",height:"483"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Das Programm startet im K\xf6rper der Methode ",(0,r.kt)("inlineCode",{parentName:"strong"},"main")," auf Zeile 6"),":"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Da es von Rechts nach Links abl\xe4uft wird zuerst die Methode\n",(0,r.kt)("inlineCode",{parentName:"li"},"readNumberInRange(40, 60)")," auf ",(0,r.kt)("strong",{parentName:"li"},"Zeile 6")," ausgef\xfchrt. Die Methode\n",(0,r.kt)("inlineCode",{parentName:"li"},"readNumberInRange")," wird mit den ",(0,r.kt)("strong",{parentName:"li"},"Parameter min=40 und max=60")," ausgef\xfchrt."),(0,r.kt)("li",{parentName:"ol"},"Nun Springt das Programm in den K\xf6rper der Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"readNumberInRange"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Zuerst wird auf ",(0,r.kt)("strong",{parentName:"li"},"Zeile 13")," die lokale Variable ",(0,r.kt)("inlineCode",{parentName:"li"},"int userInput;"),"\ndeklariert. Sie wird nicht initialisiert, da der Wert direkt vom Benutzer\neingelesen wird."),(0,r.kt)("li",{parentName:"ul"},"dann wird in der ",(0,r.kt)("inlineCode",{parentName:"li"},"do..while")," Schlaufe mit Hilfe von\n",(0,r.kt)("inlineCode",{parentName:"li"},"mytools.StdInput.readInt()")," auf ",(0,r.kt)("strong",{parentName:"li"},"Zeile 16")," ein Integer eingelesen und in\nder Variable ",(0,r.kt)("inlineCode",{parentName:"li"},"userInput")," gespeichert."),(0,r.kt)("li",{parentName:"ul"},"Auf ",(0,r.kt)("strong",{parentName:"li"},"Zeile 17")," wird gepr\xfcft ob ",(0,r.kt)("inlineCode",{parentName:"li"},"userInput")," zwischen ",(0,r.kt)("inlineCode",{parentName:"li"},"min")," und ",(0,r.kt)("inlineCode",{parentName:"li"},"max"),"\nliegt. Hier also zwischen 40 und 60."),(0,r.kt)("li",{parentName:"ul"},"Wurde keine korrekte Zahl eingelesen Springt das Programm wieder zur\n",(0,r.kt)("strong",{parentName:"li"},"Zeile 15")))),(0,r.kt)("li",{parentName:"ol"},"Wurde eine korrekte Zahl eingelesen, wird sie nun auf ",(0,r.kt)("strong",{parentName:"li"},"Zeile 18"),"\nzur\xfcckgegeben."),(0,r.kt)("li",{parentName:"ol"},"Nun springt das Programm wieder zur\xfcck zur ",(0,r.kt)("strong",{parentName:"li"},"Zeile 6"),". Der zur\xfcckgegebene\nWert wird nun durch den Zuweisungsoperator ",(0,r.kt)("inlineCode",{parentName:"li"},"=")," in die lokale Variable\n",(0,r.kt)("inlineCode",{parentName:"li"},"int userInput")," der ",(0,r.kt)("inlineCode",{parentName:"li"},"main"),"-Methode gespeichert."),(0,r.kt)("li",{parentName:"ol"},"Als weiteres wird nun die Variable ",(0,r.kt)("inlineCode",{parentName:"li"},"userInput")," auf ",(0,r.kt)("strong",{parentName:"li"},"Zeile 7")," mit einem\nString verkn\xfcpft und durch die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"System.out.println")," auf die Konsole\nausgegeben. Es wird bei einem Methodenaufruf also immer zuerst der Code\ninnerhalb der Klammer ",(0,r.kt)("inlineCode",{parentName:"li"},"()")," ausgef\xfchrt.")),(0,r.kt)("admonition",{title:"Zeilen-Flow",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"6, 13, (14, 15, 16, 17), 18, 6, 7"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Wobei die Zeilen (14, 15, 16, 17) mehrmals ausgef\xfchrt werden k\xf6nnen."),(0,r.kt)("li",{parentName:"ul"},"Die Zeilen 1-5, 8-11, 19-21 werden nie ausgef\xfchrt. Sie beinhalten Struktur\nInformationen, nicht aber ausf\xfchrbarer Code."))),(0,r.kt)("h3",{id:"geltungsbereich-von-lokalen-variablen"},"Geltungsbereich von lokalen Variablen"),(0,r.kt)("p",null,"Lokale Variablen k\xf6nnen nur im selben Code-Block (geschweifte Klammern ",(0,r.kt)("inlineCode",{parentName:"p"},"{ }"),")\nindem Sie auch deklariert wurden, verwendet werden."),(0,r.kt)("p",null,"Im oberen Beispiel wird die Variable ",(0,r.kt)("inlineCode",{parentName:"p"},"int userInput")," zwei Mal deklariert."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Einmal in der Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"main")," auf Zeile 6"),(0,r.kt)("li",{parentName:"ul"},"Einmal in der Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"readNumberInRange"),"auf Zeile 13.")),(0,r.kt)("p",null,"Auch wenn diese gleich heissen und vom gleichen Typ sind, sind es ",(0,r.kt)("strong",{parentName:"p"},"zwei\neigenst\xe4ndige Variablen"),". Sie k\xf6nnten auch anders heissen."),(0,r.kt)("admonition",{title:"Lokale Variable?",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Wenn eine Variable ",(0,r.kt)("strong",{parentName:"p"},"innerhalb einer Methode")," initialisiert wird, spricht man\nvon lokalen Variablen. Lokal, da sie nur innerhalb dieser Methode ab der\nInitialisierung verwendet werden kann (g\xfcltig ist)."),(0,r.kt)("p",{parentName:"admonition"},"\ud83e\uddb8 Es gibt noch Instanz-Variablen, die innerhalb einer gesamten Klasse\nsichtbar sind. Instanz-Variablen sind in diesem Modul noch nicht relevant!")),(0,r.kt)("h4",{id:"explizites-beispiel"},"Explizites Beispiel"),(0,r.kt)("p",null,"Im unteren Beispiel sind die Variablen ",(0,r.kt)("inlineCode",{parentName:"p"},"userInput")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"userInputMain")," und\n",(0,r.kt)("inlineCode",{parentName:"p"},"userInputRange")," umbenannt."),(0,r.kt)("p",null,"Ebenfalls f\xfchren wir noch die Variable ",(0,r.kt)("inlineCode",{parentName:"p"},"userInputRangeNested")," ein. Diese braucht\nes f\xfcr die Logik nicht, zeigt aber die Sichtbarkeit innerhalb von geschachtelten\nCode-Blocks in Methoden."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Gr\xfcn wird dargestellt wenn eine Variable sichtbar, also deklariert wird"),(0,r.kt)("li",{parentName:"ul"},"Gelb zeigt an wenn die Sichtbarkeit einer Variable endet"),(0,r.kt)("li",{parentName:"ul"},"Rot sind Fehlerbeispiele, an diesen Stellen wird versucht auf eine Variable\nzuzugreifen, welche an dem Punkt nicht sichtbar ist.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Geltungsbereich von lokalen Variablen" showLineNumbers',title:'"Geltungsbereich',von:!0,lokalen:!0,'Variablen"':!0,showLineNumbers:!0},'import mytools.StdInput;\n\npublic class Beispiel {\n\n    public static void main(String[] args) {\n        // highlight-red-next-line\n        // ERROR: userInputMain wird erst auf Zeile 9 definiert\n        // highlight-red-next-line\n        System.out.println("Hier kann " + userInputMain + " noch nicht verwendet werden!");\n\n        // highlight-green-next-line\n        int userInputMain = readNumberInRange(40, 60); // ab hier ist userInputMain sichtbar\n\n        // userInputMain ist sichtbar\n        System.out.println("Sie haben " + userInputMain + " eingegeben!");\n\n        // highlight-red-next-line\n        // ERROR: userInputRange ist hier nicht sichtbar!\n        // highlight-red-next-line\n        System.out.println("Hier kann " + userInputRange + " nicht verwendet werden!");\n        // highlight-yellow-next-line\n        // hier endet die Sichtbarkeit von userInputMain\n    }\n\n    private static int readNumberInRange(int min, int max)\n        // highlight-green-next-line\n    {   // ab hier ist min und max sichtbar\n        // highlight-green-next-line\n        int userInputRange; // ab hier ist userInputRange sichtbar\n        do {\n            // highlight-green-next-line\n            int userInputRangeNested; // ab hier ist userInputRangeNested sichtbar\n            System.out.print("Geben Sie eine Zahl zwischen " + min + " und " + max + " ein: ");\n            userInputRangeNested = StdInput.readInt(); // userInputRangeNested ist sichtbar\n            userInputRange = userInputRangeNested; // userInputRange ist sichtbar\n            // highlight-yellow-next-line\n            // hier endet die Sichtbarkeit von userInputRangeNested\n        } while (min > userInputRange || userInputRange > max);\n        // highlight-red-next-line\n        return userInputRangeNested; // ERROR: userInputRangeNested ist nicht sichtbar!\n        return userInputRange; // userInputRange ist hier sichtbar\n        // highlight-yellow-next-line\n        // hier endet die Sichtbarkeit von userInputRange, min und max\n    }\n\n}\n')),(0,r.kt)("admonition",{title:"Geschweifte Klammern Z\xe4hlen!",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Beim Programmieren muss man immer ein gutes Auge auf die geschweiften Klammern\nhalten. Diese sind sehr oft das Problem wenn Eclipse errors anzeigt."),(0,r.kt)("p",{parentName:"admonition"},"\ud83e\uddb8 Es ist guter Stil, wenn die Verschachtelung nicht mehr als 3\nKlammern \xfcbersteigt.")),(0,r.kt)("h2",{id:"-erkl\xe4rvideos-von-studyflix"},"\ud83d\udcfa Erkl\xe4rvideos von Studyflix"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://studyflix.de/informatik/java-methoden-1901"},"Java Methoden einfach erkl\xe4rt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://studyflix.de/informatik/parameter-von-methoden-426"},"Parameter von Methoden einfach erkl\xe4rt"))))}m.isMDXComponent=!0},87545:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/methodenflow-14609264826c9fdcd6e0398a9f35192e.png"}}]);