"use strict";(self.webpackChunkdocosaurus_rex=self.webpackChunkdocosaurus_rex||[]).push([[4466],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>b});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,b=p["".concat(u,".").concat(m)]||p[m]||c[m]||l;return t?r.createElement(b,o(o({ref:n},d),{},{components:t})):r.createElement(b,o({ref:n},d))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=m;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[p]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},79716:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const l={},o="\ud83d\udcdd Noten berechnen",i={unversionedId:"2b-datentypen/aufgabe3-notenberechnen",id:"2b-datentypen/aufgabe3-notenberechnen",title:"\ud83d\udcdd Noten berechnen",description:"Erstellen Sie ein Programm, welches vom Benutzer",source:"@site/docs/2b-datentypen/aufgabe3-notenberechnen.md",sourceDirName:"2b-datentypen",slug:"/2b-datentypen/aufgabe3-notenberechnen",permalink:"/bbzbl-modul-319/docs/2b-datentypen/aufgabe3-notenberechnen",draft:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-319/tree/main/docs/2b-datentypen/aufgabe3-notenberechnen.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcdd Datentypen initialisieren",permalink:"/bbzbl-modul-319/docs/2b-datentypen/aufgabe2-datentypen-initialisieren"},next:{title:"\ud83d\udcdd Verwendung von Konstanten",permalink:"/bbzbl-modul-319/docs/2b-datentypen/aufgabe4-konstanten"}},u={},s=[],d={toc:s},p="wrapper";function c(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"-noten-berechnen"},"\ud83d\udcdd Noten berechnen"),(0,a.kt)("p",null,"Erstellen Sie ein Programm, welches vom Benutzer"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"drei Semesternoten einliest (",(0,a.kt)("inlineCode",{parentName:"li"},"StdInput.read..."),")"),(0,a.kt)("li",{parentName:"ul"},"den Durchschnitt berechnet"),(0,a.kt)("li",{parentName:"ul"},"sich dabei an ein strenges Notensystem h\xe4lt, dass nur ganze Noten zul\xe4sst und\nimmer abrundet"),(0,a.kt)("li",{parentName:"ul"},"den Durchschnitt ausgibt")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Anhand dieser \xdcbung erkennen Sie, dass man mit Variablen und Zahlen ganz\nnormal rechnen kann."),(0,a.kt)("li",{parentName:"ul"},"Auch sollte nun das ",(0,a.kt)("strong",{parentName:"li"},"EVA-Prinzip")," klar werden"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Musterl\xf6sung"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Wo ist die Methode ",(0,a.kt)("inlineCode",{parentName:"strong"},"main"),"?")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Die Klasse mit der ",(0,a.kt)("inlineCode",{parentName:"li"},"main")," Methode m\xfcsst Ihr selber erstellen."),(0,a.kt)("li",{parentName:"ul"},"der ",(0,a.kt)("inlineCode",{parentName:"li"},"import")," geh\xf6rt ganz oben ins File."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"...")," kann man l\xf6schen ;)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Musterl\xf6sung ohne main"',title:'"Musterl\xf6sung',ohne:!0,'main"':!0},'import mytools.StdInput;\n\n...\n\n// deklarieren\ndouble grade1;\ndouble grade2;\ndouble grade3;\ndouble result;\n\n// E - Einlesen\nSystem.out.println("Welcome to the average calculator");\nSystem.out.println("Please enter the first grade");\ngrade1 = StdInput.readDouble();\nSystem.out.println("Please enter the second grade");\ngrade2 = StdInput.readDouble();\nSystem.out.println("Please enter the third grade");\ngrade3 = StdInput.readDouble();\n\n// V - Verarbeiten\nresult = (grade1 + grade2 + grade3) / 3;\n\n// A - Ausgeben\nSystem.out.println("The average grade is: " + result);\n'))))}c.isMDXComponent=!0}}]);