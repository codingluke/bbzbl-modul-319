"use strict";(self.webpackChunkdocosaurus_rex=self.webpackChunkdocosaurus_rex||[]).push([[5205],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(t),m=a,h=c["".concat(u,".").concat(m)]||c[m]||p[m]||i;return t?r.createElement(h,o(o({ref:n},d),{},{components:t})):r.createElement(h,o({ref:n},d))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},96666:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const i={sidebar_position:1,keywords:["pdf"]},o="Einfacher Methodenaufruf",l={unversionedId:"4a-methoden-fehleranalyse/einfache-methode",id:"4a-methoden-fehleranalyse/einfache-methode",title:"Einfacher Methodenaufruf",description:"Das folgende Beispiel zeigt einen einfachen Methodenaufruf, ohne Parameter.",source:"@site/docs/4a-methoden-fehleranalyse/einfache-methode.md",sourceDirName:"4a-methoden-fehleranalyse",slug:"/4a-methoden-fehleranalyse/einfache-methode",permalink:"/bbzbl-modul-319/docs/4a-methoden-fehleranalyse/einfache-methode",draft:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-319/tree/main/docs/4a-methoden-fehleranalyse/einfache-methode.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,keywords:["pdf"]},sidebar:"tutorialSidebar",previous:{title:"4 - Methoden und Fehleranalyse (Debugging)",permalink:"/bbzbl-modul-319/docs/4a-methoden-fehleranalyse/"},next:{title:"Debugging / Fehleranalyse",permalink:"/bbzbl-modul-319/docs/4a-methoden-fehleranalyse/debugging"}},u={},s=[],d={toc:s},c="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"einfacher-methodenaufruf"},"Einfacher Methodenaufruf"),(0,a.kt)("p",null,"Das folgende Beispiel zeigt einen einfachen Methodenaufruf, ohne Parameter."),(0,a.kt)("p",null,"Die hervorgehobenen Linien zeigen den grunds\xe4tzlichen Ablauf des Programms. Wie\nbisher bekannt, wird das Programm in der ",(0,a.kt)("inlineCode",{parentName:"p"},"main"),"-Methode ausgef\xfchrt, und die\nAnweisung welche dort steht, ruft die Methode ",(0,a.kt)("inlineCode",{parentName:"p"},"printCurrentDate")," auf, die ihre\nAufgabe, das aktuelle Datum auszugeben, ausf\xfchrt."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'import java.time.LocalDate ;\n\npublic class OutputMethodExample {\n    public static void main(String[] args) {\n        // highlight-yellow-next-line\n        printCurrentDate();\n    }\n\n    public static void printCurrentDate() {\n        // highlight-yellow-next-line\n        System.out.println("Current date is: " + LocalDate.now());\n    }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Das Programm startet auf ",(0,a.kt)("strong",{parentName:"li"},"Zeile 5")),(0,a.kt)("li",{parentName:"ul"},"und springt sogleich durch den Methodenaufruf ",(0,a.kt)("inlineCode",{parentName:"li"},"printCurrentDate();")," zur\n",(0,a.kt)("strong",{parentName:"li"},"Zeile 9"),", in den Methodenk\xf6rper von ",(0,a.kt)("inlineCode",{parentName:"li"},"printCurrentDate"),".",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Auf Zeile 8 wird die Mehtode definiert, auf Zeile 9 f\xe4ngt der Code an der\nAusgef\xfchrt wird."))),(0,a.kt)("li",{parentName:"ul"},'der Name "printCurrentDate" ist frei gew\xe4hlt! Diese sollte beschreiben was die\nMehtode macht. Da wir hier die aktuelle Zeit ausgeben heisst diese\n',(0,a.kt)("inlineCode",{parentName:"li"},"printCurrentDate"),".")),(0,a.kt)("admonition",{title:"Verwendete Schl\xfcsselw\xf6rter",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Die Schl\xfcsselw\xf6rter ",(0,a.kt)("inlineCode",{parentName:"p"},"public"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"static")," und ",(0,a.kt)("inlineCode",{parentName:"p"},"void")," m\xfcsst ihr momentan noch nicht\nverstehen. Diese werden in einem sp\xe4teren Zeitpunkt eingef\xfchrt.")))}p.isMDXComponent=!0}}]);