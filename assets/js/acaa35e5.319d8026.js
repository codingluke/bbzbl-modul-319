"use strict";(self.webpackChunkdocosaurus_rex=self.webpackChunkdocosaurus_rex||[]).push([[7428],{4154:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>o,frontMatter:()=>t,metadata:()=>l,toc:()=>h});var r=i(5893),s=i(1151);const t={keywords:["pdf"]},a="\ud83d\udcd6 Arrays / Listen",l={id:"woche07/7a-for-arrays/arrays",title:"\ud83d\udcd6 Arrays / Listen",description:"Programmierer versuchen immer so wenig wie m\xf6glich Code schreiben zu m\xfcssen - ja",source:"@site/docs/woche07/7a-for-arrays/arrays.md",sourceDirName:"woche07/7a-for-arrays",slug:"/woche07/7a-for-arrays/arrays",permalink:"/bbzbl-modul-319/docs/woche07/7a-for-arrays/arrays",draft:!1,unlisted:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-319/tree/main/docs/woche07/7a-for-arrays/arrays.md",tags:[],version:"current",frontMatter:{keywords:["pdf"]},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udd8a\ufe0f Array Aufgaben",permalink:"/bbzbl-modul-319/docs/woche07/7a-for-arrays/array-aufgaben"},next:{title:"\ud83d\udcd6 foreach",permalink:"/bbzbl-modul-319/docs/woche07/7a-for-arrays/foreach"}},d={},h=[{value:"Array initialisieren",id:"array-initialisieren",level:2},{value:"Array Werte-Zuweisung",id:"array-werte-zuweisung",level:2},{value:"Array Zugriff",id:"array-zugriff",level:2},{value:"Zugriff mit for(each)",id:"zugriff-mit-foreach",level:3},{value:"Generische Durchschnitt-Methode",id:"generische-durchschnitt-methode",level:3},{value:"Eine Variante f\xfcr das Anlegen und die Initialisierung",id:"eine-variante-f\xfcr-das-anlegen-und-die-initialisierung",level:2},{value:"Array sortieren",id:"array-sortieren",level:2},{value:"\ud83d\udcfa Erkl\xe4rvideos von Studyflix",id:"tv-erkl\xe4rvideos-von-studyflix",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"-arrays--listen",children:"\ud83d\udcd6 Arrays / Listen"}),"\n",(0,r.jsxs)(n.p,{children:["Programmierer versuchen immer so wenig wie m\xf6glich Code schreiben zu m\xfcssen - ja\ngute Programmierer sind faul ","\ud83d\ude03",". Daher gibt es genau f\xfcr das in der\nEinleitung beschriebene Problem das Konzept der Arrays, also Auflistungen."]}),"\n",(0,r.jsxs)(n.admonition,{title:"Array -> Auflistung",type:"info",children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Eine Variable mit einer Auflistung von Werten des gleichen Typs."})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Wenn wir viele Daten erfassen m\xf6chten, die alle den ",(0,r.jsx)(n.strong,{children:"gleichen Datentyp"}),"\nbesitzen und auch zusammengeh\xf6ren, dann k\xf6nnen wir mit Arrays arbeiten."]}),"\n",(0,r.jsxs)(n.li,{children:["Arrays besitzen eine ",(0,r.jsx)(n.strong,{children:"vordefinierte L\xe4nge"}),". Diese kann nicht einfach so\nge\xe4ndert werden.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:":superhero: Es gibt in weiteren Modulen Listen mit dynamischer L\xe4nge. Dies\nist in diesem Modul jedoch noch nicht relevant!"}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsx)(n.h2,{id:"array-initialisieren",children:"Array initialisieren"}),"\n",(0,r.jsx)(n.p,{children:"Eine Array-Variable kann auf folgende Weise angelegt werden:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="Array initialisieren"',children:"   int[] werte = new int[100];\n//                       ^^^  Array-L\xe4nge     (hier 100)\n//               ^^^ ^^^^^^^^ Initialisierung (immer mit new)\n// ^^^^^ ^^^^^ Definition int-Array           (eckige Klammern)\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Zuerst wird durch ",(0,r.jsx)(n.code,{children:"int[] werte"})," eine Variable vom Datentyp ",(0,r.jsx)(n.code,{children:"int"})," definiert\nwelche als Array mehrere Werte fassen kann. Danach wird durch ",(0,r.jsx)(n.code,{children:"= new int[100]"}),"\nder Array initialisiert. Beim initialisieren wird festgelegt, dass der Array 100\nWerte fassen kann. Diese L\xe4nge ist fest und kann nicht mehr ge\xe4ndert werden."]}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["Alle weiteren Code-Beispiele beziehen sich immer auf oberen Array ",(0,r.jsx)(n.code,{children:"werte"})]})}),"\n",(0,r.jsx)(n.h2,{id:"array-werte-zuweisung",children:"Array Werte-Zuweisung"}),"\n",(0,r.jsx)(n.p,{children:"Der Zugriff auf eine Wert im Array geschieht wie bei jeder Variable \xfcber den\nVariablennamen. Da ein Array nun mehrere Werte gespeichert hat, ben\xf6tigt es\nzus\xe4tzlich die Stelle an der der Wert in der Liste steht. Die Zuweisung\ngeschieht nun \xfcber den Variablennamen und danach, in eckigen Klammern, die\nStelle/Index des Wertes, den man ansprechen m\xf6chte."}),"\n",(0,r.jsx)(n.p,{children:"Und die sieht wie folgt aus:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="Array-Zuweisung durch index in eckiger Klammer"',children:"   werte[0] = 3;\n//      ^^^ Durch eckige Klammern und einem index wird auf\n//          einen beliebigen Wert im Array zugegriffen.\n//          (hier 0, also der erste Wert)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Nun k\xf6nnte man die Messwerte analog der ",(0,r.jsx)(n.a,{href:"/bbzbl-modul-319/docs/woche07/7a-for-arrays/",children:"Einleitung"})," folgendermassen\naufnehmen:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="Array manuell initialisieren"',children:"werte[0] = mess_methode();\nwerte[1] = mess_methode();\nwerte[2] = mess_methode();\n// und so weiter\nwerte[99] = mess_methode();\n"})}),"\n",(0,r.jsx)(n.p,{children:"Diese Variante ist nun jedoch nicht weniger Schreibintensiv als mit die Version\nmit den 100 eigenen Variablen der Einleitung. Der Vorteil liegt nun aber darin,\ndass nur noch eine Variable definiert werden muss."}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:[(0,r.jsx)(n.code,{children:"for"}),"-Schleifen"]}),(0,r.jsxs)(n.p,{children:["Schreibfaule Programmierer k\xf6nnten nun auf die Idee kommen, dass Zahlen von 0-99\ndurch die bereits bekannte ",(0,r.jsx)(n.code,{children:"for"}),"-Schlaufe automatisiert erstellt werden k\xf6nnten!"]})]}),"\n",(0,r.jsxs)(n.p,{children:["Und Sie haben recht! Dies geht nun folgendermassen: ",(0,r.jsx)(n.strong,{children:":magic_wand:\nAbra-kadabara-simsalabim aus 100 Zeilen, da mach 3!"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'showLineNumbers title="Abf\xfcllen eines Arrays mit Hilfe einer for-Schleife"',children:"for (int index = 0; index < 100; i++) { // 100 ist die Array L\xe4nge\n    werte[index] = mess_methode(); // die Variable index von 0-99\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In diesem Beispiel wird durch eine ",(0,r.jsx)(n.code,{children:"for"}),"-Schleife 100 Mal den Code-Block auf\nZeile 3 ausgef\xfchrt. Dabei wird der Variable ",(0,r.jsx)(n.code,{children:"index"})," im Einerschritt ",(0,r.jsxs)(n.em,{children:["(",(0,r.jsx)(n.code,{children:"i++"}),")"]}),"\ndie Werte 0 bis 99 zugewiesen ",(0,r.jsxs)(n.em,{children:["(",(0,r.jsx)(n.code,{children:"index < 100"})," ist maximal 99)"]}),". Die Methode\n",(0,r.jsx)(n.code,{children:"mess_methode()"})," wird somit 100 Mal ausgef\xfchrt und der R\xfcckgabewert jedes Mal\neiner anderen Stelle des Arrays ",(0,r.jsx)(n.code,{children:"werte"})," zugewiesen."]}),"\n",(0,r.jsx)(n.admonition,{title:"Arrays starten bei 0",type:"info",children:(0,r.jsx)(n.p,{children:"Beachten Sie, dass das erste Element des Arrays den Index 0 hat. Entsprechend\nhat das letzte Element als Index eine Zahl, die um 1 kleiner ist als die Anzahl\nElemente."})}),"\n",(0,r.jsx)(n.h2,{id:"array-zugriff",children:"Array Zugriff"}),"\n",(0,r.jsxs)(n.p,{children:["Der Zugriff auf Werte eines Arrays funktioniert analog der Zuweisung. Nur\nbraucht es daf\xfcr keinen Zuweisungsoperator ",(0,r.jsx)(n.code,{children:"="}),". Dieser erfolgt folgendermassen."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="Array-Zugriff"',children:"System.out.println(werte[0]); // Gibt den ersten Wert auf die Konsole aus\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Wenn wir jetzt den Durchschnitt aller Messwerte berechnen m\xf6chten, k\xf6nnen wir\nnun nochmals die ",(0,r.jsx)(n.code,{children:"for"}),"-Schleife zur Hilfe nehmen:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="Summe aller Werte des int-Arrays werte"',children:"int summe = 0;\nfor (int i = 0; i < 100; i++) {\n    summe += werte[i];\n}\nint durchschnitt = summe / 100;\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Jeder Array besitzt das Attribut ",(0,r.jsx)(n.code,{children:".length"})," in welchem seine genaue L\xe4nge\nabgerufen werden kann. Dies Hilft um nicht immer die L\xe4nge nachschauen zu\nm\xfcssen. Auch ist es besser lesbar. Dies k\xf6nnen wir uns zu Nutzen machen um den\nCode noch genereller zu schreiben:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="Summe aller Werte optimiert mit .length"',children:"int summe = 0;\nfor (int i = 0; i < werte.length; i++) {\n    summe += werte[i];\n}\nint durchschnitt = summe / werte.length;\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"Magische Nummern vermeiden",type:"caution",children:[(0,r.jsx)(n.p,{children:"Zahlen, die nicht klar ersichtlich sind, wof\xfcr sie stehen, werden auch magische\nNummern genannt und sollen vermieden werden. Sie machen den Code un\xfcbersichtlich\nund f\xfchren zu Fehlern."}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Hier ist die Zahl 100 eine Magische Nummer :magic_wand:"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"werte.length"})," sagt klar aus, dass es sich um die L\xe4nge vom Array ",(0,r.jsx)(n.code,{children:"werte"}),"\nhandelt. 100 kann vieles sein. z.B. 100 ","\ud83d\udc30"]}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"zugriff-mit-foreach",children:"Zugriff mit for(each)"}),"\n",(0,r.jsxs)(n.p,{children:["Wenn man von einem Array lediglich alle Werte auslesen m\xf6chte, nicht aber\nschreiben, gibt es eine spezielle Variante der ",(0,r.jsx)(n.code,{children:"for"}),"-Schleife. Die sogenannte\n",(0,r.jsxs)(n.a,{href:"/bbzbl-modul-319/docs/woche07/7a-for-arrays/foreach",children:[(0,r.jsx)(n.code,{children:"foreach"}),"-Schleife"]})," (F\xfcr jedes Element). In dieser Variante\nexistiert keine Z\xe4hlervariable, stattdessen wird bei jeder Iteration der n\xe4chste\nWert direkt in eine Variable geschrieben. Dies macht das Auslesen eines gesamten\nArrays um einiges einfacher."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="Summe aller Werte optimiert mit foreach"',children:"int summe = 0;\nfor (int wert : werte) {\n//              ^^^^^ Array welcher ausgelesen werden soll\n//            ^ Ein Doppelpunkt trennt die Variable pro Iteration und der Array\n//   ^^^^^^^^ Die Variable welche pro Iteration den n\xe4chsten Wert beinhaltet\n    summe += wert;\n}\nint durchschnitt = summe / werte.length;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Mit dieser Variante kann also nicht auf ein Individuelles Element zugegriffen\nwerden. Auch kann nicht ein Element neu zugewiesen werden. Daf\xfcr ben\xf6tigt es\nviel weniger Zeichen und ist somit weniger Komplex und lesbarer."}),"\n",(0,r.jsx)(n.admonition,{title:"Eckige Klammern ein-mal-eins",type:"info",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"datentyp[]"})," : Difinition eines Arrays"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"new datentyp[100]"})," : Initialisierung und Definition der Array-L\xe4nge"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"variablennamen[n]"})," : Zugriff auf den n-ten Wert im Array.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"variablennamen[0]"})," : Zugriff auf den 1ten Wert im Array."]}),"\n",(0,r.jsx)(n.li,{children:"Ein Array beginnt immer bei 0!"}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,r.jsx)(n.h3,{id:"generische-durchschnitt-methode",children:"Generische Durchschnitt-Methode"}),"\n",(0,r.jsxs)(n.p,{children:["Mit Hilfe des Attributes ",(0,r.jsx)(n.code,{children:".length"})," k\xf6nnten wir nun eine generelle Methode\ndefinieren, welche den Durchschnitt aller Eintr\xe4ge eines ",(0,r.jsx)(n.strong,{children:"beliebigen"}),"\n",(0,r.jsx)(n.code,{children:"int"}),"-Arrays berechnet."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="Generische Summen-Methode"',children:"public static int durchschnitt(int[] liste) {\n    int summe = 0;\n    for (int eintrag : liste) {\n        summe += eintrag;\n    }\n    return summe / liste.length;\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="Methode durchschnitt verwendet mit dem Array werte"',children:"int durchschnitt = durchschnitt(werte);\n"})}),"\n",(0,r.jsx)(n.admonition,{title:"Generalisierung",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Tritt etwas ",(0,r.jsx)(n.strong,{children:"h\xe4uft"})," vor, ist es elegant eine generalisierte Methode daf\xfcr zu\nfinden."]}),"\n",(0,r.jsxs)(n.li,{children:["Tritt etwas aber ",(0,r.jsx)(n.strong,{children:"nur 1 Mal"})," vor ist dies nicht immer n\xf6tig!","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Zu fr\xfches Generalisieren kann zu komplizierterem Code f\xfchren ","\ud83d\ude31"]}),"\n",(0,r.jsx)(n.li,{children:"Hier ist das obere Beispiel mit der generischen Durchschnitt-Methode\nkomplexer (mehr Code). H\xe4tten wir ein Programm das mehrfach int-Arrays\nsummieren muss, w\xe4re es weniger komplex."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Aber Achtung"}),", wird eine Methode zu gross ist es \xfcbersichtlicher sie\naufzusplitten (Programmieren brauch Erfahrung, die erh\xe4lt man nur beim machen)"]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"eine-variante-f\xfcr-das-anlegen-und-die-initialisierung",children:"Eine Variante f\xfcr das Anlegen und die Initialisierung"}),"\n",(0,r.jsx)(n.p,{children:"Es ist auch m\xf6glich, einen Array anzulegen und gleich mit Werten abzuf\xfcllen.\nDiese Variante funktioniert so:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"int[] zahlen = { 1, 8, 9, 3 };\n"})}),"\n",(0,r.jsx)(n.p,{children:"Sie sehen, dass es kein new gibt, sondern nur gleich eine Aufz\xe4hlung der Werte\nin dem Array. Die Gr\xf6sse wird auch nicht explizit angegeben. Sie ergibt sich\nganz einfach aus der Anzahl Elemente, die angegeben werden."}),"\n",(0,r.jsx)(n.p,{children:"Diese Variante wird eher f\xfcr kleinere Arrays verwendet, was sicher noch\nnachvollziehbar ist. Es gibt aber keine Limitierung von der Sprachdefinition\nher."}),"\n",(0,r.jsx)(n.p,{children:"Hier ein kleines Beispiel, wie so ein Array angelegt und dann ausgegeben wird."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'int[] zahlen = { 1, 8, 9, 3 };\nfor(int i = 0; i < zahlen.length; i++){\n    System.out.println(i + ": " + zahlen[i]);\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"array-sortieren",children:"Array sortieren"}),"\n",(0,r.jsx)(n.p,{children:"Wenn wir die Daten in einem Array sortieren m\xf6chten, dann m\xfcssen wir das nicht\nselbst programmieren. Es gibt eine Methode, die das f\xfcr uns \xfcbernimmt. Sie\nheisst (wenig \xfcberraschend) sort."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'int[] zahlen = { 1, 8, 9, 3 };\nArrays.sort(zahlen);\nfor(int i = 0; i < zahlen.length; i++){\n    System.out.println(i + ": " + zahlen[i]);\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Der Datentyp der Werte im Array spielt dabei keine Rolle. Der Aufruf\nfunktioniert auch bei einem String-Array."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'String[] worte = { "eins", "zwei", "drei" };\nfor(int i = 0; i < worte.length; i++){\n    System.out.println(i + ": " + worte[i]);\n}\nArrays.sort(worte);\nfor(int i = 0; i < worte.length; i++){\n    System.out.println(i + ": " + worte[i]);\n}\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"tv-erkl\xe4rvideos-von-studyflix",children:["\ud83d\udcfa"," Erkl\xe4rvideos von Studyflix"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://studyflix.de/informatik/java-array-1898",children:"https://studyflix.de/informatik/java-array-1898"})}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>a});var r=i(7294);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);