"use strict";(self.webpackChunkdocosaurus_rex=self.webpackChunkdocosaurus_rex||[]).push([[5402],{679:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=n(5893),s=n(1151);const i={sidebar_position:4,keywords:["pdf"]},a="Memory",o={id:"woche08/8a-repetition/memory",title:"Memory",description:"Programmierung eines Memory-Games. (Ged\xe4chtnisspiel)",source:"@site/docs/woche08/8a-repetition/memory.md",sourceDirName:"woche08/8a-repetition",slug:"/woche08/8a-repetition/memory",permalink:"/bbzbl-modul-319/docs/woche08/8a-repetition/memory",draft:!1,unlisted:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-319/tree/main/docs/woche08/8a-repetition/memory.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,keywords:["pdf"]},sidebar:"tutorialSidebar",previous:{title:"Mathematik Olympiade",permalink:"/bbzbl-modul-319/docs/woche08/8a-repetition/mathe-olympiade"},next:{title:"Zeitrennen Radsport",permalink:"/bbzbl-modul-319/docs/woche08/8a-repetition/zeitrennen"}},l={},d=[{value:"Spielregeln",id:"spielregeln",level:2},{value:"Einfache Umsetzung",id:"einfache-umsetzung",level:2},{value:"Fortgeschrittene Umsetzung",id:"fortgeschrittene-umsetzung",level:2}];function c(t){const e={code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...t.components},{Details:n}=e;return n||function(t,e){throw new Error("Expected "+(e?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"memory",children:"Memory"}),"\n",(0,r.jsx)(e.p,{children:"Programmierung eines Memory-Games. (Ged\xe4chtnisspiel)"}),"\n",(0,r.jsx)(e.h2,{id:"spielregeln",children:"Spielregeln"}),"\n",(0,r.jsx)(e.p,{children:"In einer ersten Version definieren Sie eine fixe Liste an Worten, z.B. diese:"}),"\n",(0,r.jsx)(e.p,{children:"Car, Pen, Star, Apple, Book, Printer, Highway, Cat, Clock, Tree"}),"\n",(0,r.jsx)(e.p,{children:"Der Benutzer soll nun zwischen drei Befehlen w\xe4hlen k\xf6nnen:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"learn/lernen"}),": alle W\xf6rter werden angezeigt"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"guess/raten"}),": der Benutzer kann ein Wort raten"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"stop"}),": das Programm endet"]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["Die Funktionen ",(0,r.jsx)(e.code,{children:"learn"})," und ",(0,r.jsx)(e.code,{children:"guess"})," sollen solange gew\xe4hlt werden k\xf6nnen, bis der\nBenutzer stop eingibt (riecht nach Schlaufe). Dann beendet das Programm."]}),"\n",(0,r.jsx)(e.p,{children:"W\xe4hlen Sie geeignete Datentypen, Variablenbezeichnungen und Kontrollstrukturen."}),"\n",(0,r.jsx)(e.h2,{id:"einfache-umsetzung",children:"Einfache Umsetzung"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Wenn ein Benutzer ein Wort eingibt, welches in der Liste enthalten ist, dann\nerh\xf6hen Sie eine entsprechende ",(0,r.jsx)(e.em,{children:"Z\xe4hlervariable"})," um eins."]}),"\n",(0,r.jsx)(e.li,{children:"Sobald der Wert der Variablen der Listengr\xf6sse entspricht, endet das Programm\nund gratuliert dem Benutzer."}),"\n"]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Musterl\xf6sung:"}),(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'import mytools.StdInput;\n\npublic class SimpleMemory {\n\n\tpublic static void main(String[] args) {\n\t\tString[] cards = new String[10];\n\t\tcards[0] = "Car";\n\t\tcards[1] = "Pen";\n\t\tcards[2] = "Star";\n\t\tcards[3] = "Apple";\n\t\tcards[4] = "Book";\n\t\tcards[5] = "Printer";\n\t\tcards[6] = "Highway";\n\t\tcards[7] = "Cat";\n\t\tcards[8] = "Clock";\n\t\tcards[9] = "Tree";\n\n\t\tString answer = "";\n\t\tint correctAnsweser = 0;\n\n\t\twhile(!answer.equals("stop") && correctAnsweser < 10) {\n\t\t\tSystem.out.println("");\n\t\t\tSystem.out.println("choose: g=guess, l=learn, stop");\n\t\t\tanswer = StdInput.readString();\n\n\t\t\tif(answer.equals("l")) {\n\t\t\t\tfor(int i = 0; i < cards.length; i++) {\n\t\t\t\t\tSystem.out.print("\\t" + cards[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(answer.equals("g")) {\n\t\t\t\tSystem.out.println("Guess a word: ");\n\n\t\t\t\tString guess = StdInput.readString();\n\n\t\t\t\tboolean contained = false;\n\n\t\t\t\tfor (int i = 0; i < cards.length; i++) {\n\t\t\t\t\tif(cards[i].equals(guess)) {\n\t\t\t\t\t\tcontained = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(contained) {\n\t\t\t\t\tSystem.out.println("Woaw! Great!");\n\t\t\t\t\tcorrectAnsweser++;\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println("Oh, better guess next time");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println("Great, you did remember all cards");\n\t}\n}\n'})})]}),"\n",(0,r.jsx)(e.h2,{id:"fortgeschrittene-umsetzung",children:"Fortgeschrittene Umsetzung"}),"\n",(0,r.jsx)(e.p,{children:"Erstellen Sie eine neue Version des Games, am besten mit einer Kopie der\nbisherigen L\xf6sung."}),"\n",(0,r.jsx)(e.p,{children:"W\xe4hlen Sie aus der folgenden Liste einzelne schwierigere Anforderungen, mit\ndenen Sie interessante Fragen der Programmierung festigen:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Das Programm kann sich f\xfcr jedes Wort individuell merken, ob es bereits\nrichtig geraten wurde.","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:'Bei der einfachen Version kann man "cheaten" und 10 mal das gleiche Wort\neingeben ;)'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["Das Programm fragt direkt nach dem Wort an einer bestimmten Position.","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"z.B. wie heisst das Wort an Position 4? Korrekte Antwort: Apple"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.li,{children:"Das Programm l\xe4sst es zu, dass der Benutzer die Worte selbst erfassen kann."}),"\n"]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Musterl\xf6sung:"}),(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",metastring:'title="Memory.java"',children:'import mytools.StdInput;\n\npublic class Memory {\n\n\tpublic static void main(String[] args) {\n\t\tString[] cards = new String[10];\n\t\tcards[0] = "Car";\n\t\tcards[1] = "Pen";\n\t\tcards[2] = "Star";\n\t\tcards[3] = "Apple";\n\t\tcards[4] = "Book";\n\t\tcards[5] = "Printer";\n\t\tcards[6] = "Highway";\n\t\tcards[7] = "Cat";\n\t\tcards[8] = "Clock";\n\t\tcards[9] = "Tree";\n\n\t\tboolean[] guesses = {false,false,false,false,false,false,false,false,false,false};\n\n\t\tString answer = "";\n\n\t\twhile (!answer.equals("stop")) {\n\t\t\tSystem.out.println("");\n\t\t\t//switch: player turns\n\t\t\tSystem.out.println("choose: g=guess, l=learn, stop");\n\t\t\tanswer = StdInput.readString();\n\n\t\t\tif (answer.equals("l")) {\n\t\t\t\tfor (int i = 0; i < cards.length; i++) {\n\t\t\t\t\tSystem.out.print("\\t" + cards[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (answer.equals("g")) {\n\t\t\t\tfor (int i = 0; i < 2; i++) {\n\t\t\t\t\tSystem.out.println("");\n\t\t\t\t}\n\t\t\t\tint pos = (int) (Math.random() * 10);\n\n\t\t\t\tSystem.out.println("Guess at position: " + pos);\n\n\t\t\t\tString guess = StdInput.readString();\n\n\t\t\t\tif (cards[pos].equals(guess)) {\n\t\t\t\t\tSystem.out.println("Woaw! Great!");\n\t\t\t\t\tguesses[pos] = true;\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println("Oh, better guess next time");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n'})})]})]})}function u(t={}){const{wrapper:e}={...(0,s.a)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(c,{...t})}):c(t)}},1151:(t,e,n)=>{n.d(e,{Z:()=>o,a:()=>a});var r=n(7294);const s={},i=r.createContext(s);function a(t){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:a(t.components),r.createElement(i.Provider,{value:e},t.children)}}}]);