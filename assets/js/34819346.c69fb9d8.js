"use strict";(self.webpackChunkdocosaurus_rex=self.webpackChunkdocosaurus_rex||[]).push([[5205],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=s(n),h=i,m=c["".concat(d,".").concat(h)]||c[h]||p[h]||a;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=h;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},96666:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var r=n(87462),i=(n(67294),n(3905));const a={sidebar_position:1,keywords:["pdf"]},l="Einfacher Methodenaufruf",o={unversionedId:"4a-methoden-fehleranalyse/einfache-methode",id:"4a-methoden-fehleranalyse/einfache-methode",title:"Einfacher Methodenaufruf",description:"Das folgende Beispiel zeigt einen einfachen Methodenaufruf, ohne Parameter.",source:"@site/docs/4a-methoden-fehleranalyse/einfache-methode.md",sourceDirName:"4a-methoden-fehleranalyse",slug:"/4a-methoden-fehleranalyse/einfache-methode",permalink:"/bbzbl-modul-319/docs/4a-methoden-fehleranalyse/einfache-methode",draft:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-319/tree/main/docs/4a-methoden-fehleranalyse/einfache-methode.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,keywords:["pdf"]},sidebar:"tutorialSidebar",previous:{title:"4 - Methoden und Fehleranalyse (Debugging)",permalink:"/bbzbl-modul-319/docs/4a-methoden-fehleranalyse/"},next:{title:"Debugging / Fehleranalyse",permalink:"/bbzbl-modul-319/docs/4a-methoden-fehleranalyse/debugging"}},d={},s=[{value:"Verwendete Schl\xfcsselw\xf6rter",id:"verwendete-schl\xfcsselw\xf6rter",level:2},{value:"<code>public</code>: Sichtbarkeit",id:"public-sichtbarkeit",level:3},{value:"<code>static</code>: Art (Optional)",id:"static-art-optional",level:3},{value:"<code>void</code>: R\xfcckgabewert",id:"void-r\xfcckgabewert",level:3}],u={toc:s},c="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"einfacher-methodenaufruf"},"Einfacher Methodenaufruf"),(0,i.kt)("p",null,"Das folgende Beispiel zeigt einen einfachen Methodenaufruf, ohne Parameter."),(0,i.kt)("p",null,"Die hervorgehobenen Linien zeigen den grunds\xe4tzlichen Ablauf des Programms. Wie\nbisher bekannt, wird das Programm in der ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),"-Methode ausgef\xfchrt, und die\nAnweisung welche dort steht, ruft die Methode ",(0,i.kt)("inlineCode",{parentName:"p"},"printCurrentDate")," auf, die ihre\nAufgabe, das aktuelle Datum auszugeben, ausf\xfchrt."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import java.time.LocalDate ;\n\npublic class OutputMethodExample {\n    public static void main(String[] args) {\n        // highlight-yellow-next-line\n        printCurrentDate();\n    }\n\n    public static void printCurrentDate() {\n        // highlight-yellow-next-line\n        System.out.println("Current date is: " + LocalDate.now());\n    }\n}\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Das Programm startet auf ",(0,i.kt)("strong",{parentName:"li"},"Zeile 5")),(0,i.kt)("li",{parentName:"ul"},"und springt sogleich durch den Methodenaufruf ",(0,i.kt)("inlineCode",{parentName:"li"},"printCurrentDate();")," zur\n",(0,i.kt)("strong",{parentName:"li"},"Zeile 9"),", in den Methodenk\xf6rper von ",(0,i.kt)("inlineCode",{parentName:"li"},"printCurrentDate"),".")),(0,i.kt)("h2",{id:"verwendete-schl\xfcsselw\xf6rter"},"Verwendete Schl\xfcsselw\xf6rter"),(0,i.kt)("h3",{id:"public-sichtbarkeit"},(0,i.kt)("inlineCode",{parentName:"h3"},"public"),": Sichtbarkeit"),(0,i.kt)("p",null,"An erster Stelle wird die Sichtbarkeit definiert. Die Methode wird ",(0,i.kt)("inlineCode",{parentName:"p"},"public"),"\ndefiniert und ist somit von \xfcberall aus sichtbar."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"public")," f\xfcr alle sichtbar"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"private")," nur f\xfcr die entsprechende Klasse selbst sichtbar"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nicht-angegeben")," im eigenen Modul sichtbar (",(0,i.kt)("strong",{parentName:"li"},"nie leer lassen bitte!"),")")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Vorderhand gen\xfcgt es, wenn alle Methoden ",(0,i.kt)("strong",{parentName:"mdxAdmonitionTitle"},"public")," sind.")),(0,i.kt)("h3",{id:"static-art-optional"},(0,i.kt)("inlineCode",{parentName:"h3"},"static"),": Art (Optional)"),(0,i.kt)("p",null,"An zweiter Stelle steht ",(0,i.kt)("inlineCode",{parentName:"p"},"static"),". Dies muss so sein, da die Mehtode von der\nebenfalls statischen ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),"-Mehtode aus aufgerufen wird."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Das Schl\xfcsselwort ",(0,i.kt)("inlineCode",{parentName:"li"},"static")," ist ",(0,i.kt)("strong",{parentName:"li"},"Optional"),"! Wenn nicht vorhanden ist die\nMethode immer dynamisch."),(0,i.kt)("li",{parentName:"ul"},"Dieses Schl\xfcsselwort kennzeichnet Variablen und Methoden, welche keine\ndynamischen Werte verwendet. Methoden welche ",(0,i.kt)("em",{parentName:"li"},"static")," sind, d\xfcrfen nur\nKonstanten Verwenden. Konstanten sind Variablen welche mit ",(0,i.kt)("inlineCode",{parentName:"li"},"static"),"\ngekennzeichnet sind."),(0,i.kt)("li",{parentName:"ul"},"Will man aus einer statischen Methode (wie z.B. der ",(0,i.kt)("inlineCode",{parentName:"li"},"main"),"-Methode) eine\nandere Methode aufrufen, muss diese auch statisch sein.")),(0,i.kt)("h3",{id:"void-r\xfcckgabewert"},(0,i.kt)("inlineCode",{parentName:"h3"},"void"),": R\xfcckgabewert"),(0,i.kt)("p",null,"An dritter stelle wird durch ",(0,i.kt)("inlineCode",{parentName:"p"},"void")," angegeben, dass diese Methode keinen\nR\xfcckgabewert besitzt. Dadurch braucht die Methode auch kein ",(0,i.kt)("inlineCode",{parentName:"p"},"return")," Befehl."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"W\xe4re ",(0,i.kt)("inlineCode",{parentName:"p"},"static")," weggelasse w\xfcrde void an zweiter Stelle stehen."),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"void")," bedeutet, dass die Methode keinen R\xfcckgabewert besitzt"),(0,i.kt)("li",{parentName:"ul"},"Steht ein Datentyp wie z.B. ",(0,i.kt)("inlineCode",{parentName:"li"},"int"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"String"),", muss die Methode diesen Datentyp\ndurch das Schl\xfcsselwort ",(0,i.kt)("inlineCode",{parentName:"li"},"return")," zur\xfcckgeben."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Sie lernen Parameter und R\xfcckgabewerte sp\xe4ter im Detail")))))}p.isMDXComponent=!0}}]);